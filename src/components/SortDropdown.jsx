/**
 * SortDropdown.jsx
 * Loaf Life â€“ renders dropdown menus for sorting / filtering.
 *
 * Refactored by Brady from code generated by ChatGPT o4-mini-high.
 *
 * @author Brady Duval
 * @author https://chatgpt.com/
 *
 * @function SortDropdown
 * @description Displays a label with a chevron that toggles a dropdown list of options;
 *              invokes onChange callback when an option is selected.
 *
 * @function handleClickOutside
 * @description Listens for clicks outside the component to close the dropdown.
 */

import { useState, useRef, useEffect } from "react"
import { ChevronDownIcon } from "@heroicons/react/24/outline"

export default function SortDropdown({ label, options, onChange }) {
  const [open, setOpen] = useState(false);
  const ref = useRef(null);

  useEffect(() => {
    /**
     * handleClickOutside
     *
     * @function handleClickOutside
     * @param {MouseEvent} e - The mousedown event
     * @description Closes dropdown if click occurs outside this component
     */
    function handleClickOutside(e) {
      if (ref.current && !ref.current.contains(e.target)) {
        setOpen(false) // Close dropdown when clicking outside
      }
    }
    document.addEventListener("mousedown", handleClickOutside)
    return () => document.removeEventListener("mousedown", handleClickOutside)
  }, [])

  return (
    <div ref={ref} className="relative inline-block text-left">
      {/* Toggle button showing current label and chevron */}
      <button
        onClick={() => setOpen(o => !o)} // Open or close dropdown
        className="flex items-center space-x-1 text-sm font-medium text-[#8B4C24] hover:text-[#639751] focus:outline-none"
      >
        <span>{label}</span>
        <ChevronDownIcon className="h-4 w-4" />
      </button>

      {open && (
        /* Dropdown list of options */
        <ul className="absolute mt-1 w-24 bg-white border border-[#D1905A] rounded-md shadow-lg z-20 overflow-hidden">
        {options.map(opt => (
          <li key={opt}>
            <button
              onClick={() => {
                onChange(opt)   // Notify parent of new selection
                setOpen(false)  // Close dropdown after selection
              }}
              className={`
                block w-full text-left px-4 py-2 text-sm
                ${opt === label
                  ? "bg-[#639751] text-white font-semibold" // Highlight active
                  : "text-[#8B4C24] hover:bg-[#F5E3C6]"
                }
              `}
            >
              {opt}
            </button>
          </li>
        ))}
      </ul>      
      )}
    </div>
  )
}
