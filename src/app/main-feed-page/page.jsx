/**
 * Main Feed
 * page.jsx
 * Loaf Life â€“ The Main Feed page where all of our discussion boards will be hosted
 * 
 * Modified with assistance from ChatGPT o4-mini-high.
 * Images for the threads covers generated by ChatGPT 04-mini-high.
 * 
 * @author Brady Duval
 * @author https://chatgpt.com/
 */

'use client';

import React, { useState, useMemo } from 'react';
import StickyNavbar from '@/components/StickyNavbar';
import BottomNav from '@/components/BottomNav';
import Footer from '@/components/Footer';
import {
    MagnifyingGlassIcon,
    ChatBubbleOvalLeftIcon,
} from '@heroicons/react/24/outline';

const threads = [
    {
        id: 1,
        title: 'Deals Thread',
        description: 'Best discounts and coupon codes around Vancouver',
        postCount: 24,
        createdAt: '2025-05-04T10:15:00Z',
        isMine: true,
        imageUrl: '/images/threads/dealsThread.png',
    },
    {
        id: 2,
        title: 'Hacks Thread',
        description: 'Life-hacks, study tips, and productivity tricks',
        postCount: 16,
        createdAt: '2025-05-05T14:30:00Z',
        isMine: false,
        imageUrl: '/images/threads/hacksThread.png',
    },
    {
        id: 3,
        title: 'Saving Tips',
        description: 'How to save money on textbooks, food, and more',
        postCount: 30,
        createdAt: '2025-05-03T09:00:00Z',
        isMine: false,
        imageUrl: '/images/threads/savingsThread.png',
    },
    {
        id: 4,
        title: 'Free Events',
        description: 'Up-to-date listings of no-cost get togethers',
        postCount: 8,
        createdAt: '2025-05-05T08:45:00Z',
        isMine: true,
        imageUrl: '/images/threads/eventsThread.png',
    },
];

export default function MainFeed() {
    const [activeFilter, setActiveFilter] = useState(null);
    const filterOptions = ['Popular', 'Recent', 'My Threads'];

    const visibleThreads = useMemo(() => {
        let arr = [...threads];
        if (activeFilter === 'Popular') {
            arr.sort((a, b) => b.postCount - a.postCount);
        } else if (activeFilter === 'Recent') {
            arr.sort(
                (a, b) => new Date(b.createdAt) - new Date(a.createdAt)
            );
        } else if (activeFilter === 'My Threads') {
            arr = arr.filter((t) => t.isMine);
        }
        return arr;
    }, [activeFilter]);

    return (
        <div className="flex flex-col h-screen bg-[#F5E3C6] pt-16">
            <StickyNavbar />

            {/* Filters + Search */}
            <div className="p-4 border-b border-[#D1905A] max-w-md mx-auto w-full">
                <div className="flex flex-wrap gap-2 mb-3">
                    {filterOptions.map((opt) => (
                        <button
                            key={opt}
                            onClick={() => {
                                if (activeFilter !== opt) setActiveFilter(opt);
                            }}
                            onDoubleClick={() => {
                                if (activeFilter === opt) setActiveFilter(null);
                            }}
                            className={`
                px-4 py-1 text-sm font-medium rounded-full transition
                ${activeFilter === opt
                                    ? 'bg-[#639751] text-white'
                                    : 'bg-white text-[#8B4C24] hover:bg-gray-100'
                                }
              `}
                        >
                            {opt}
                        </button>
                    ))}
                </div>

                <div className="relative">
                    <MagnifyingGlassIcon className="w-5 h-5 text-[#8B4C24] absolute left-3 top-1/2 -translate-y-1/2" />
                    <input
                        type="text"
                        placeholder="Search threads"
                        className={`
              w-full pl-10 pr-4 py-2 rounded-full bg-white border border-gray-200
              placeholder-[#8B4C24] text-[#8B4C24]
              focus:outline-none focus:ring-2 focus:ring-[#D1905A] focus:border-transparent
              transition
            `}
                    />
                </div>
            </div>

            {/* Scrollable Image Feed */}
            <div className="flex-1 overflow-y-auto p-4 space-y-4 max-w-md mx-auto w-full relative pb-16">
                {visibleThreads.map((t) => (
                    <div
                        key={t.id}
                        className="
      relative
      h-48
      rounded-2xl
      overflow-hidden
      shadow-lg
      bg-cover
      bg-center
      transition-transform duration-200
      hover:scale-105 hover:shadow-2xl
      cursor-pointer
      shadow-xl  
      ring-2 ring-[#D1905A]
    "
                        style={{
                            backgroundImage: `url(${t.imageUrl})`
                        }}
                    >
                        {/* Dark gradient for legibility */}
                        <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent" />

                        {/* Title */}
                        <h2 className="absolute bottom-10 left-4 text-white text-lg font-semibold">
                            {t.title}
                        </h2>

                        {/* Description */}
                        <p className="absolute bottom-4 left-4 text-white/80 text-sm">
                            {t.description}
                        </p>

                        {/* Post-count badge */}
                        <div className="
        absolute
        top-4 right-4
        inline-flex items-center
        bg-white/90 text-[#8B4C24]
        text-xs font-medium
        px-2 py-0.5 rounded-full
      ">
                            <ChatBubbleOvalLeftIcon className="w-4 h-4 mr-1" />
                            {t.postCount}
                        </div>
                    </div>
                ))}
                <Footer />
            </div>
            <BottomNav />
        </div>
    );
}
